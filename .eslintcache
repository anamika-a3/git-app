[{"D:\\Anamika\\Block8\\git-app\\src\\index.tsx":"1","D:\\Anamika\\Block8\\git-app\\src\\reportWebVitals.ts":"2","D:\\Anamika\\Block8\\git-app\\src\\App.tsx":"3","D:\\Anamika\\Block8\\git-app\\src\\Component\\login\\index.tsx":"4","D:\\Anamika\\Block8\\git-app\\src\\Component\\profile\\profile.tsx":"5","D:\\Anamika\\Block8\\git-app\\src\\Component\\dashboard\\dashboard.tsx":"6","D:\\Anamika\\Block8\\git-app\\src\\Component\\commits\\commits.tsx":"7","D:\\Anamika\\Block8\\git-app\\src\\Component\\Repos\\Repos.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":729,"mtime":1612789020111,"results":"12","hashOfConfig":"10"},{"size":25633,"mtime":1612934674031,"results":"13","hashOfConfig":"10"},{"size":3055,"mtime":1612676559533,"results":"14","hashOfConfig":"10"},{"size":19439,"mtime":1612923736215,"results":"15","hashOfConfig":"10"},{"size":299,"mtime":1612701533449,"results":"16","hashOfConfig":"10"},{"size":198,"mtime":1612731677619,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vytgnl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"D:\\Anamika\\Block8\\git-app\\src\\index.tsx",[],["39","40"],"D:\\Anamika\\Block8\\git-app\\src\\reportWebVitals.ts",[],"D:\\Anamika\\Block8\\git-app\\src\\App.tsx",[],"D:\\Anamika\\Block8\\git-app\\src\\Component\\login\\index.tsx",["41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { FC, useState } from 'react';\r\n\r\nimport  {RouteComponentProps} from 'react-router-dom';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './login.css';\r\n\r\nimport { Drawer, Form, Col, Row, Input, Select,Checkbox, Carousel, DatePicker } from 'antd';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {  Button, Avatar, Box, CssBaseline, FormControlLabel, Grid, Link, Paper, Typography } from '@material-ui/core';\r\n// import express from 'express';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n// const router = express.Router();\r\n// router.use(express.json())\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst dateFormat = 'YYYY/MM/DD';\r\nconst monthFormat = 'YYYY/MM';\r\n\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Code Blank\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '80vh',\r\n    width: '80vw'\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random/?login)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    height: 'inherit',\r\n\r\n    \r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: 'inherit', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(5),\r\n    height: 'inherit'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n}));\r\n\r\n  \r\nconst Login: React.FC<Props> = ({ history, location, match }) => {\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst className = useStyles();\r\nconst [state, setState] = useState({visible:false});\r\nconst [firstName, setFirstName]=useState('');\r\nconst [lastName, setLastName]=useState('');\r\nconst [emailAddress, setEmailAddress]=useState('');\r\nconst [description, setDescription]=useState('');\r\nconst [registerPassword, setRegisterPassword]=useState('');\r\n\r\n\r\nconst classes = useStyles();\r\n\r\nfunction showDrawer () {\r\n  // alert(\"button clicked\");\r\n  setState({\r\n    visible: true,\r\n  });\r\n};\r\n  \r\nfunction onClose() {\r\n  setState({\r\n    visible: false,\r\n  });\r\n};\r\n  \r\nfunction onSubmit (){\r\nhistory.push('./Dashboard');\r\n};\r\n\r\nconst onSubmitRegisterForm = async()=>{\r\n    try {\r\n    const body = { firstName, lastName, emailAddress, description,registerPassword };\r\n      const response = await fetch(\r\n        'http://localhost:3000/api/register/',\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n};\r\n  \r\n// function onFinish (values: any){\r\n//   console.log('Received values of form: ', values);\r\n// };\r\n  \r\nfunction handleLogin (event: React.FormEvent<HTMLFormElement>) {\r\n  event.preventDefault()\r\n  alert(\"good job \");\r\n};\r\n\r\nreturn (\r\n   \r\n  <div className=\"row\">\r\n   <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            {/* <LockOutlinedIcon /> */}\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Form className={classes.form}>\r\n          <Row gutter={16}>\r\n                  <Col span={24}>\r\n                    <Form.Item\r\n                      name=\"email\"\r\n                      label=\"Email Id\"\r\n                      rules={[\r\n                        {\r\n                          type: 'email',\r\n                          message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your E-mail!',\r\n                        },\r\n                      ]}\r\n                    > \r\n                      <Input\r\n                        style={{ width: '100%' }}\r\n                        placeholder=\"Please enter email\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  \r\n                </Row>\r\n          <Row gutter={16}>\r\n                  <Col span={24}>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      rules={[\r\n                        {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                        },\r\n                      ]}\r\n                    \r\n                      >\r\n                        \r\n                      <Input.Password placeholder=\"Please enter password\"  />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  \r\n                </Row>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\"  />}\r\n              label=\" Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            \r\n              onClick={onSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link> */}\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\" onClick= {showDrawer}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </Form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    <Drawer\r\n          title=\"Create a new account\"\r\n          width={720}\r\n          onClose={onClose}\r\n          visible={state.visible}\r\n          bodyStyle={{ paddingBottom: 10, overflow:\"-moz-hidden-unscrollable\"}}\r\n          footer={\r\n            <div style={{ textAlign: 'right',}}>\r\n                  {/* <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={onSubmit}>\r\n                    Submit\r\n                  </Button> */}\r\n                </div>\r\n          }\r\n        >\r\n          <Form layout=\"vertical\" \r\n                hideRequiredMark   \r\n                className=\"register\"\r\n                // onFinish={onFinish}\r\n                onFinish={onSubmitRegisterForm}\r\n                scrollToFirstError>\r\n                <Row gutter={16}>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                   \r\n                      label=\"First Name\"\r\n                      rules={[{ required: true, message: 'Please enter your first-name' }]}\r\n\r\n                    >\r\n                      <Input placeholder=\"Enter your First Name\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      \r\n                      label=\"Last Name\"\r\n                      rules={[{ required: true, message: 'Please enter your Last Name' }]}\r\n                    >\r\n                      <Input placeholder=\"Enter your last-name\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>  \r\n                <Row gutter={16}>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      label=\"Email\"\r\n                      rules={[\r\n                        {\r\n                          type: 'email',\r\n                          message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your E-mail!',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        style={{ width: '100%' }}\r\n                        placeholder=\"Enter your email\"\r\n                     \r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6}>\r\n                  <Form.Item label=\"Birth-Date\">\r\n                  <DatePicker defaultValue={moment('2015/01/01', dateFormat)} format={dateFormat} />\r\n                </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                     \r\n                      label=\"Password\"\r\n                      rules={[\r\n                        {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                        },\r\n                      ]}\r\n                      hasFeedback\r\n                      >\r\n                      <Input.Password placeholder=\"Enter your password\"/>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      name=\"confirm\"\r\n                      label=\"Confirm Password\"\r\n                      dependencies={['password']}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                              return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input.Password placeholder=\"Confirm your password\"/>\r\n                    </Form.Item>       \r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                  <Col span={24}>\r\n                    <Form.Item\r\n                     \r\n                      label=\"Description\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'please enter url description',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input.TextArea rows={5} placeholder=\"please enter sescription\"/>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button>\r\n                    Submit\r\n                  </Button>\r\n              </Form>\r\n        </Drawer>\r\n  </div>\r\n)};\r\n              \r\nexport default Login;\r\n\r\n  \r\n    \r\n  //   function showDrawer () {\r\n  //     setState({\r\n  //       visible: true,\r\n  //     });\r\n  //   };\r\n\r\n  //   function onClose() {\r\n  //     setState({\r\n  //       visible: false,\r\n  //     });\r\n  //   };\r\n\r\n  //   function onSubmit(){\r\n  //     console.log('submitted');\r\n  //   }\r\n\r\n  //   function onFinish (values: any){\r\n  //       console.log('Received values of form: ', values);\r\n  //   };\r\n\r\n  //   function handleLogin (event: React.FormEvent<HTMLFormElement>) {\r\n  //     event.preventDefault()\r\n  //     alert(\"good job \");\r\n  //   };\r\n\r\n  //   return (\r\n  //     <div classNameName = {classNamees.root}>\r\n  //       <Grid container component=\"main\" >\r\n  //       <CssBaseline />\r\n  //       <Grid item xs={3} sm={4} md={7} >\r\n  //       <Carousel autoplay classNameName='contentStyle'>     \r\n  //        <div>\r\n  //          <img src={c1} alt ='c1' classNameName=\"img1\"/>\r\n  //        </div>\r\n  //        <div>\r\n  //        <img src={c2} alt ='c2' classNameName=\"img2\"/>\r\n  //        </div>\r\n  //        <div>\r\n  //        <img src={c3} alt ='c3' classNameName=\"img3\"/>\r\n  //        </div>\r\n  //        <div>\r\n  //        <img src={c4} alt ='c4' classNameName=\"img4\"/>\r\n  //        </div>\r\n  //        <div>\r\n  //        <img src={c5} alt ='c5' classNameName=\"img5\"/>\r\n  //        </div>\r\n  //      </Carousel>\r\n  //       </Grid>\r\n  //         <Grid item xs={3} sm={4} md={5} component={Paper} elevation={6} square>\r\n  //           <div classNameName={classNamees.paper}>\r\n  //           <Avatar classNameName={classNamees.avatar}>\r\n  //             {/* <LockOutlinedIcon /> */}\r\n  //           </Avatar>\r\n  //           <Typography component=\"h1\" variant=\"h5\">\r\n  //             Sign in\r\n  //           </Typography>\r\n  //           <form classNameName={classNamees.root}  autoComplete=\"off\" onSubmit={handleLogin}>\r\n  //             <TextField\r\n  //               id='outlined-basic'   \r\n  //               label='Enter Email'\r\n  //               variant='outlined'\r\n  //               type='email'\r\n  //               placeholder='Required'\r\n  //               value={email}\r\n  //               onChange={event => setEmail(event.target.value)}\r\n  //               classNameName='input'\r\n  //               required\r\n  //             />\r\n  //             <TextField\r\n  //               id='outlined-basic'\r\n  //               label='Enter password'\r\n  //               variant='outlined'\r\n  //               type='password'\r\n  //               placeholder='Required'\r\n  //               value={password}\r\n  //               onChange={event => setPassword(event.target.value)}\r\n  //               classNameName='input'\r\n  //               required\r\n  //             />         \r\n  //             <FormControlLabel\r\n  //               control={<Checkbox value=\"remember\"  />}\r\n  //               label=\"Remember me\"\r\n  //             />\r\n  //             <Button\r\n  //               type=\"submit\"\r\n  //               fullWidth\r\n  //               variant=\"contained\"\r\n  //               color=\"primary\"\r\n  //               classNameName={classNamees.submit}\r\n  //               onClick={() => {\r\n  //                 history.push('\\Dashboard')\r\n  //               }}\r\n  //             >\r\n  //               Sign In\r\n  //             </Button>\r\n  //             <Grid container>\r\n  //               <Grid item xs>\r\n  //                 <Link href=\"#\" variant=\"body2\">\r\n  //                   Forgot password?\r\n  //                 </Link>\r\n  //               </Grid>\r\n  //               <Grid item>\r\n  //                 <Link href=\"#\" variant=\"body2\" onClick= {showDrawer}>\r\n  //                   {\"Don't have an account? Sign Up\"}\r\n  //                 </Link>\r\n  //               </Grid>\r\n  //             </Grid>\r\n  //               <Box mt={5}>\r\n  //                 <Copyright />\r\n  //               </Box>\r\n  //           </form>\r\n  //         </div>\r\n  //         </Grid>\r\n  //       </Grid>\r\n  //       <Drawer\r\n  //         title=\"Create a new account\"\r\n  //         width={720}\r\n  //         onClose={onClose}\r\n  //         visible={state.visible}\r\n  //         bodyStyle={{ paddingBottom: 10, overflow:\"-moz-hidden-unscrollable\"}}\r\n  //         footer={\r\n  //           <div style={{ textAlign: 'right',}}>\r\n  //                 <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n  //                   Cancel\r\n  //                 </Button>\r\n  //                 <Button onClick={onSubmit}>\r\n  //                   Submit\r\n  //                 </Button>\r\n  //               </div>\r\n  //         }\r\n  //       >\r\n  //         <Form layout=\"vertical\" \r\n  //               hideRequiredMark   \r\n  //               classNameName=\"register\"\r\n  //               onFinish={onFinish}\r\n  //               scrollToFirstError>\r\n  //               <Row gutter={16}>\r\n  //                 <Col span={12}>\r\n  //                   <Form.Item\r\n  //                     name=\"first-name\"\r\n  //                     label=\"First Name\"\r\n  //                     rules={[{ required: true, message: 'Please enter your first-name' }]}\r\n  //                   >\r\n  //                     <Input placeholder=\"Please enter your full-name\" />\r\n  //                   </Form.Item>\r\n  //                 </Col>\r\n  //                 <Col span={12}>\r\n  //                   <Form.Item\r\n  //                     name=\"last-name\"\r\n  //                     label=\"Last Name\"\r\n  //                     rules={[{ required: true, message: 'Please enter your last-name' }]}\r\n  //                   >\r\n  //                     <Input placeholder=\"Please enter your last-name\" />\r\n  //                   </Form.Item>\r\n  //                 </Col>\r\n  //               </Row>  \r\n  //               <Row gutter={16}>\r\n  //                 <Col span={12}>\r\n  //                   <Form.Item\r\n  //                     name=\"email\"\r\n  //                     label=\"Email\"\r\n  //                     rules={[\r\n  //                       {\r\n  //                         type: 'email',\r\n  //                         message: 'The input is not valid E-mail!',\r\n  //                       },\r\n  //                       {\r\n  //                         required: true,\r\n  //                         message: 'Please input your E-mail!',\r\n  //                       },\r\n  //                     ]}\r\n  //                   >\r\n  //                     <Input\r\n  //                       style={{ width: '100%' }}\r\n  //                       placeholder=\"Please enter email\"\r\n  //                     />\r\n  //                   </Form.Item>\r\n  //                 </Col>\r\n  //                 <Col span={12}>\r\n  //                   <Form.Item\r\n  //                     // name=\"phone-no\"\r\n  //                     label=\"Phone Number\"\r\n                    \r\n  //                     rules={[\r\n  //                       {\r\n  //                         required: true,\r\n  //                         message: 'The input is not valid Phone-no.',\r\n  //                       },\r\n  //                       {\r\n  //                         required: true,\r\n  //                         message: 'Please input your Phone no.!',\r\n  //                       },\r\n  //                     ]}\r\n  //                   >\r\n  //                     <Input\r\n  //                       style={{ width: '100%' }}\r\n  //                       placeholder=\"Please enter Phone no.\"\r\n  //                     />\r\n  //                   </Form.Item>\r\n  //                 </Col>\r\n  //               </Row>\r\n  //               <Row gutter={16}>\r\n  //                 <Col span={12}>\r\n  //                   <Form.Item\r\n  //                     name=\"password\"\r\n  //                     label=\"Password\"\r\n  //                     rules={[\r\n  //                       {\r\n  //                       required: true,\r\n  //                       message: 'Please input your password!',\r\n  //                       },\r\n  //                     ]}\r\n  //                     hasFeedback\r\n  //                     >\r\n  //                     <Input.Password />\r\n  //                   </Form.Item>\r\n  //                 </Col>\r\n  //                 <Col span={12}>\r\n  //                   <Form.Item\r\n  //                     name=\"confirm\"\r\n  //                     label=\"Confirm Password\"\r\n  //                     dependencies={['password']}\r\n  //                     hasFeedback\r\n  //                     rules={[\r\n  //                       {\r\n  //                         required: true,\r\n  //                         message: 'Please confirm your password!',\r\n  //                       },\r\n  //                       ({ getFieldValue }) => ({\r\n  //                         validator(_, value) {\r\n  //                           if (!value || getFieldValue('password') === value) {\r\n  //                             return Promise.resolve();\r\n  //                           }\r\n  //                           return Promise.reject('The two passwords that you entered do not match!');\r\n  //                         },\r\n  //                       }),\r\n  //                     ]}\r\n  //                   >\r\n  //                     <Input.Password />\r\n  //                   </Form.Item>       \r\n  //                 </Col>\r\n  //               </Row>\r\n  //               <Row gutter={16}>\r\n  //                 <Col span={24}>\r\n  //                   <Form.Item\r\n  //                     name=\"description\"\r\n  //                     label=\"Description\"\r\n  //                     rules={[\r\n  //                       {\r\n  //                         required: true,\r\n  //                         message: 'please enter url description',\r\n  //                       },\r\n  //                     ]}\r\n  //                   >\r\n  //                     <Input.TextArea rows={5} placeholder=\"please enter url description\" />\r\n  //                   </Form.Item>\r\n  //                 </Col>\r\n  //               </Row>\r\n  //             </Form>\r\n  //       </Drawer>\r\n\r\n\r\n\r\n\r\n\r\n    //   <div classNameName ='page'>\r\n    \r\n    // <form classNameName='login' noValidate autoComplete=\"off\">\r\n     \r\n        \r\n    //   <div>\r\n    //     <TextField\r\n    //       required\r\n    //       id=\"outlined-required\"\r\n    //       label=\"Required\"\r\n    //       variant=\"outlined\"\r\n    //     />\r\n       \r\n    \r\n    //                  <TextField\r\n    //       id=\"outlined-password-input\"\r\n    //       label=\"Password\"\r\n    //       type=\"password\"\r\n    //       autoComplete=\"current-password\"\r\n    //       variant=\"outlined\"\r\n    //     />\r\n                  \r\n    //               <TextField\r\n    //       id=\"outlined-password-input\"\r\n    //       label=\"Password\"\r\n    //       type=\"password\"\r\n    //       autoComplete=\"current-password\"\r\n    //       variant=\"outlined\"\r\n          \r\n    //     />\r\n                  \r\n    //   </div>\r\n    // </form>\r\n            {/* <Form\r\n                  {...formItemLayout}\r\n                  form={form}\r\n                  classNameName=\"login\"\r\n                  onFinish={onFinish}\r\n                  scrollToFirstError\r\n                >\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    label=\"Enter Your E-mail\"\r\n                    rules={[\r\n                      {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Enter Password\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                      },\r\n                    ]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                      },\r\n                      ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                          if (!value || getFieldValue('password') === value) {\r\n                            return Promise.resolve();\r\n                          }\r\n                          return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                      }),\r\n                    ]}\r\n                  >\r\n                    <Input.Password />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                  <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>Remember me</Checkbox>\r\n                  </Form.Item>\r\n\r\n                  <a classNameName=\"login-form-forgot\" href=\"\">\r\n                    Forgot password\r\n                  </a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\" classNameName=\"login-form-button\">\r\n                    Log in\r\n                  </Button>\r\n                  \r\n                  <Button type=\"primary\" classNameName=\"login-form-button\" onClick={() => {\r\n                          history.push('/Register')\r\n                        }}>\r\n                    Register\r\n                  </Button>\r\n                </Form.Item>\r\n                </Form> */}\r\n","D:\\Anamika\\Block8\\git-app\\src\\Component\\profile\\profile.tsx",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React, {useState} from 'react';\r\nimport  {RouteComponentProps} from 'react-router-dom';\r\nimport { Theme, createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport './profile.css'\r\nimport dp from '../../assets/c1.jpg';\r\nimport { Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { AnyARecord } from 'dns';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\ninterface Props extends RouteComponentProps {}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      height: '50vh',\r\n      width: 'inherit',\r\n      background : 'linear-gradient(to right, white 80%, blue 20%)',\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n      width: 151,\r\n      margin: '10px',\r\n      border: 'red solid 5px',\r\n\r\n    },\r\n    // controls: {\r\n    //   display: 'flex',\r\n    //   alignItems: 'center',\r\n    //   paddingLeft: theme.spacing(1),\r\n    //   paddingBottom: theme.spacing(1),\r\n    // },\r\n    // playIcon: {\r\n    //   height: 38,\r\n    //   width: 38,\r\n    // },\r\n  }),\r\n);\r\n\r\nconst Profile: React.FC<Props> = ({ history, location, match }) => {\r\n    const classes = useStyles();\r\n  const theme = useTheme();\r\n    return (\r\n    <div>\r\n     <div className=\"container\">\r\n\t<div className=\"course\">\r\n\t\t<div className=\"preview\">\r\n        <Avatar shape=\"square\" size={84} icon={<UserOutlined />} />\r\n\t\t</div>\r\n\t\t<div className=\"info\">\r\n\t\t\r\n\t\t\t<h4>Last Name</h4>\r\n\t\t\t<h2>Name</h2>\r\n            <h5>email</h5>\r\n\t\t\t<button className=\"btn\">Update Profile</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>   \r\n<button className=\"floating-btn\" onClick={() => {\r\n                                history.push('\\Dashboard')\r\n                              }}>\r\n\tView Dashboard\r\n</button>\r\n    </div>\r\n    )\r\n}\r\nexport default Profile; \r\n    //    <div className=\"row\">\r\n    //       <Card className={classes.root}>\r\n    //   <div className={classes.details}>\r\n    //     <CardContent className={classes.content}>\r\n    //       <Typography component=\"h5\" variant=\"h5\">\r\n    //         Live From Space\r\n    //       </Typography>\r\n    //       <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n    //         Mac Miller\r\n    //       </Typography>\r\n    //     </CardContent>\r\n    //   </div>\r\n    //   <CardMedia\r\n    //     className={classes.cover}\r\n    //     image=\"/static/images/cards/live-from-space.jpg\"\r\n    //     title=\"Live from space album cover\"\r\n    //   />\r\n    // </Card>\r\n    //    </div>\r\n","D:\\Anamika\\Block8\\git-app\\src\\Component\\dashboard\\dashboard.tsx",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import React, { useState } from 'react';\r\nimport  {Link, RouteComponentProps} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n// import { Drawer, Form, Button, Col, Input, Select, DatePicker } from 'antd';\r\nimport DrawerRM from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n// import List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenusIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\nimport Menus from '@material-ui/core/Menu';\r\nimport MenusItem from '@material-ui/core/MenuItem';\r\nimport './dashboard.css';\r\nimport { Menu } from 'antd';\r\nimport { AppstoreOutlined, MailOutlined, SettingOutlined, DesktopOutlined,UserOutlined} from '@ant-design/icons';\r\n// import { Hidden } from '@material-ui/core';\r\n// import { render } from '@testing-library/react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport TableRM from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Breadcrumb } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Tabs } from 'antd';\r\nimport { Avatar, Button} from 'antd';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Empty } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Paragraph } = Typography;\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n// const { Paragraph } = Typography;\r\n\r\nconst drawerWidth = 240;\r\n\r\n//commit table\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Last Commit',\r\n    dataIndex: 'lCommit',\r\n    key: 'age',\r\n  },\r\n  {\r\n    title: 'Last Update',\r\n    dataIndex: 'lUpdate',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'SMH',\r\n    dataIndex: 'code',\r\n    key: 'code',\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'Repo 1',\r\n    lCommit: 'Added task3.html',\r\n    lUpdate: '3months ago',\r\n    code:   <Paragraph copyable>SHA Value</Paragraph>\r\n  },\r\n  {\r\n    key: '1',\r\n    name: 'Repo 2',\r\n    lCommit: 'Update tasks.css',\r\n    lUpdate: '2 weeks ago',\r\n    code:   <Paragraph copyable>SHA Value</Paragraph>\r\n\r\n  },\r\n  {\r\n    key: '1',\r\n    name: 'Repo 3',\r\n    lCommit:'Removed node_modules',\r\n    lUpdate: '30mins ago',\r\n    code:   <Paragraph copyable>SHA Value</Paragraph>\r\n  },\r\n];\r\n//commit table\r\n\r\n\r\nconst columnsCommit = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Date',\r\n    dataIndex: 'date',\r\n    key: 'age',\r\n  },\r\n  {\r\n    title: 'Authored By',\r\n    dataIndex: 'authored',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'SMH',\r\n    dataIndex: 'code',\r\n    key: 'code',\r\n  },\r\n];\r\n\r\n\r\nconst dataCommit = [\r\n  {\r\n    key: '1',\r\n    name: 'Task3.html',\r\n    date: '01 Feb, 2021',\r\n    authored: 'Anamika',\r\n    code:   <Paragraph copyable>SHA Value</Paragraph>\r\n  },\r\n  {\r\n    key: '1',\r\n    name: 'Tasks.css',\r\n    date: '01 Feb, 2021',\r\n    authored: 'Lakshay',\r\n    code:   <Paragraph copyable>SHA Value</Paragraph>\r\n\r\n  },\r\n  {\r\n    key: '1',\r\n    name: 'node_modules',\r\n    date: '01 Feb, 2021',\r\n    authored: 'Anamika',\r\n    code:   <Paragraph copyable>SHA Value</Paragraph>\r\n  },\r\n];\r\n//repo table\r\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n//repo table\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      backgroundColor: 'white',\r\n      minHeight: '100vh',\r\n      minWidth: '100vw'\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menusButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      // backgroundColor: '#2A265F',\r\n      // backgroundColor: '#2A265F',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      // backgroundColor: '#2A265F',\r\n      // backgroundColor: '#2A265F',\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // fontFamily:'Arial',\r\n      // fontSize:'16px',\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n   \r\n    },\r\n    content: {\r\n      // flexGrow: 1,\r\n      width: '80vw',\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    button:{\r\n      position: 'absolute',\r\n      float: 'right',\r\n      right: '0',\r\n      borderStyle: 'none',\r\n      borderRadius: '50%',\r\n      outline: 'none',\r\n      marginRight: \"10px\",\r\n      backgroundColor: '#2A265F',\r\n    },\r\n    toolbar:{\r\n      backgroundColor: '#2A265F',\r\n      color: \"white\"\r\n      // backgroundColor: 'white',\r\n    },\r\n    download:{\r\n      float: \"right\",\r\n      right: 0,\r\n    },\r\n    title: {\r\n      margin: theme.spacing(4, 0, 2),\r\n    },\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    // Menu:{\r\n    //   backgroundColor: '#2A265F',\r\n    //   color: 'white'\r\n    // },\r\n    // table: {\r\n    //   minWidth: 650,\r\n    // },\r\n    dashboard:{\r\n      color:\"white\"\r\n    }\r\n\r\n  }),\r\n);\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst Dashboard: React.FC<Props> = ({ history, location, match }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { Option } = Select;\r\n  const [open, setOpen] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [state, setState] = useState({visible:false});\r\n  const [component, setComponent] =useState({\r\n    visible: true,\r\n    whichMenu: \"folders\"\r\n  })\r\n  const [dense, setDense] = React.useState(true);\r\n  const [secondary, setSecondary] = React.useState(true);\r\n  // const [sizing,setSizing] = useState({\r\n  //   size: 'large',\r\n  // });\r\n  // const handleSizeChange = (e:any) => {\r\n  //   setSizing({ size: e.target.value });\r\n  // };\r\n  const folders =()=>{\r\n    setComponent({visible:true ,whichMenu: \"folders\"});\r\n  }\r\n  const commits =()=>{\r\n    setComponent({visible:true ,whichMenu: \"commits\"});\r\n  }\r\n  const changes =()=>{\r\n    setComponent({visible:true ,whichMenu: \"changes\"});\r\n  }\r\n  const branches =()=>{\r\n    setComponent({visible:true ,whichMenu: \"branches\"});\r\n  }\r\n  const repos=()=>{\r\n    const val =document.getElementsByTagName('a')[0].getAttribute('value');\r\n      history.push(`/repos/`+val);\r\n    }\r\n    function onChange(value:any) {\r\n      console.log(`selected ${value}`);\r\n    }\r\n    \r\n    function onBlur() {\r\n      console.log('blur');\r\n    }\r\n    \r\n    function onFocus() {\r\n      console.log('focus');\r\n    }\r\n    \r\n    function onSearch(val:any) {\r\n      console.log('search:', val);\r\n    }\r\n  let content:any;\r\n \r\n  //tabs\r\n  function callback(key:any) {\r\n    console.log(key);\r\n  }\r\n  \r\n  //list\r\n  function generate(element: React.ReactElement) {\r\n    return [0, 1, 2].map((value) =>\r\n      React.cloneElement(element, {\r\n        key: value,\r\n      }),\r\n    );\r\n  }\r\n  \r\n  //list\r\n  \r\n  if(component.whichMenu==\"folders\")\r\n  content= <div> \r\n    <Breadcrumb>\r\n      <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Repositories</a>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Folders</a>\r\n          </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Divider /><br></br>\r\n        <Select\r\n        showSearch\r\n        style={{ width: 200,}}\r\n        placeholder=\"Branch\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        onSearch={onSearch}\r\n      >\r\n        <Option value=\"master\">Master</Option>\r\n        <Option value=\"task02\">Task02</Option>\r\n        <Option value=\"task03\">Task03</Option>\r\n      </Select>\r\n      <Button className=\"{classes.download}\">History </Button>\r\n      <Button className=\"{classes.download}\">Find File </Button>\r\n      <Button className=\"{classes.download}\">Web IDE </Button>\r\n        <Button type=\"primary\" shape=\"circle\" className={classes.download} icon={<DownloadOutlined />} />\r\n        {/* <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />}/>\r\n        <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />}>\r\n          Download\r\n        </Button> */}\r\n        <br></br><br></br>\r\n        <Table columns={columns} dataSource={data} />\r\n  </div>\r\n  else if(component.whichMenu==\"commits\")\r\n  content= <div>\r\n    <Breadcrumb>\r\n    <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n      <Breadcrumb.Item>\r\n        <a href=\"\">Repositories</a>\r\n      </Breadcrumb.Item>\r\n      <Breadcrumb.Item>\r\n        <a href=\"\">Commits</a>\r\n      </Breadcrumb.Item>\r\n  </Breadcrumb>\r\n  <Divider /><br></br>\r\n\r\n  <Table columns={columnsCommit} dataSource={dataCommit} />\r\n  </div>\r\n  else if(component.whichMenu==\"changes\")\r\n  content=<div>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n      <Breadcrumb.Item>\r\n        <a href=\"\">Repositories</a>\r\n      </Breadcrumb.Item>\r\n      <Breadcrumb.Item>\r\n        <a href=\"\">Changes</a>\r\n      </Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <Divider/>\r\n    {/* <div>\r\n      <h4>\r\n      Locks give the ability to lock specific file or folder.\r\n      </h4>\r\n    </div> */}\r\n    <Divider/>\r\n    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n  </div>\r\n  else if(component.whichMenu==\"branches\")\r\n  content=<div><Breadcrumb>\r\n  <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n      <Breadcrumb.Item>\r\n        <a href=\"\">Repositories</a>\r\n      </Breadcrumb.Item>\r\n      <Breadcrumb.Item>\r\n        <a href=\"\">Branches</a>\r\n      </Breadcrumb.Item>\r\n  </Breadcrumb>\r\n  <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n    <TabPane tab=\"Overview\" key=\"1\">\r\n      <Button type=\"primary\" className={classes.download} >New Branch</Button>\r\n      <Button danger className={classes.download}>Delete Merged Branches</Button>\r\n    </TabPane>\r\n    <TabPane tab=\"Active\" key=\"2\">\r\n      Active\r\n    </TabPane>\r\n    <TabPane tab=\"All\" key=\"3\">\r\n      All\r\n    </TabPane>\r\n  </Tabs>\r\n    <div>\r\n      <h4>\r\n      Protected branches can be managed in <a>project settings</a>\r\n      </h4>\r\n    </div>\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12} >\r\n          <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <FolderIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Branch name\"\r\n                    secondary={secondary ? 'last commit' : null}\r\n                  />\r\n                  \r\n                  <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <Button>Merge Request</Button>\r\n                    <Button>Compare</Button>\r\n                    {/* <Button>Default Button</Button> */}\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  function showDrawer () {\r\n    alert(\"button clicked\");\r\n    setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  function onClose() {\r\n    setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClick = (event:any) =>  {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n  // setAnchorEl(null);\r\n  history.push('/');\r\n  };\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menusButton, open && classes.hide)}\r\n          >\r\n            <MenusIcon />\r\n          </IconButton>\r\n            <h3 className={classes.dashboard}>DASHBOARD</h3>\r\n                     \r\n            <button onClick={handleClick} className={classes.button}>\r\n              <Avatar\r\n              size={{ xs: 24, sm: 32, md: 40, lg: 40, xl: 50, xxl: 60 }}\r\n              icon={<UserOutlined />}\r\n              aria-controls=\"simple-menu\" aria-haspopup=\"true\" \r\n              />\r\n            </button>\r\n          <Menus\r\n        id='simple-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        // onClose={handleClose}\r\n      >\r\n        <MenusItem  onClick={() => {\r\n                                history.push('\\Profile')\r\n                              }}>Profile</MenusItem>\r\n        <MenusItem onClick={handleClose}>Logout</MenusItem>\r\n      </Menus>\r\n        </Toolbar>\r\n      \r\n      </AppBar>\r\n      <DrawerRM\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        {/* <h2>CODE MENUS</h2> */}\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        \r\n        <Menu\r\n        onClick={handleClick}\r\n        style={{ width: 237}}\r\n        defaultSelectedKeys={['3']}\r\n        defaultOpenKeys={['sub2','sub1']}\r\n        mode=\"inline\"\r\n        // className={classes.Menu}\r\n      >\r\n        <SubMenu key=\"sub1\" icon={<DesktopOutlined />} title=\"Profile\">\r\n        <Divider />\r\n            <Menu.Item key=\"1\"  onClick={() => {\r\n                                history.push('\\Profile')\r\n                              }}>View</Menu.Item>\r\n            \r\n            <Menu.Item key=\"2\" onClick={() => {\r\n                                history.push('\\Profile')\r\n                              }}>Update</Menu.Item>  \r\n                 \r\n        </SubMenu>\r\n        <Divider />\r\n        <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Repositories\">\r\n        <Divider />\r\n          \r\n        \r\n          <Menu.Item key=\"3\" onClick={folders}>Folders</Menu.Item>\r\n         \r\n          <Menu.Item key=\"4\" onClick={commits}>Commits</Menu.Item>\r\n          \r\n          <Menu.Item key=\"5\" onClick={changes}>Changes</Menu.Item>\r\n         \r\n          <Menu.Item key=\"6\" onClick={branches}>Branches</Menu.Item>\r\n       \r\n          <Menu.Item key=\"7\" onClick={branches}>Merge Requests</Menu.Item>\r\n          <Menu.Item key=\"8\" onClick={changes}>Tags</Menu.Item>\r\n        </SubMenu>\r\n        <Divider />\r\n        <Menu.Item  icon={<SettingOutlined />} title=\"Settings\">Settings</Menu.Item>\r\n        <Divider />\r\n      </Menu>\r\n        {/* <List>\r\n          {['Profile', 'Repository', 'Commits', 'Logout'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </DrawerRM>\r\n      \r\n      \r\n        <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        \r\n        <div className=\"content\">\r\n          {content}\r\n          \r\n        </div>\r\n      </main>\r\n          \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","D:\\Anamika\\Block8\\git-app\\src\\Component\\commits\\commits.tsx",["122","123"],"D:\\Anamika\\Block8\\git-app\\src\\Component\\Repos\\Repos.tsx",["124","125","126"],"import React, {useState} from 'react';\r\nimport  {RouteComponentProps} from 'react-router-dom';\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst Repos: any=() => {\r\n}\r\nexport default Repos;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":19},{"ruleId":"131","severity":1,"message":"135","line":8,"column":41,"nodeType":"133","messageId":"134","endLine":8,"endColumn":47},{"ruleId":"131","severity":1,"message":"136","line":8,"column":58,"nodeType":"133","messageId":"134","endLine":8,"endColumn":66},{"ruleId":"131","severity":1,"message":"137","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":17},{"ruleId":"131","severity":1,"message":"138","line":10,"column":10,"nodeType":"133","messageId":"134","endLine":10,"endColumn":22},{"ruleId":"131","severity":1,"message":"139","line":10,"column":36,"nodeType":"133","messageId":"134","endLine":10,"endColumn":41},{"ruleId":"131","severity":1,"message":"140","line":21,"column":9,"nodeType":"133","messageId":"134","endLine":21,"endColumn":20},{"ruleId":"131","severity":1,"message":"141","line":24,"column":7,"nodeType":"133","messageId":"134","endLine":24,"endColumn":18},{"ruleId":"131","severity":1,"message":"142","line":26,"column":7,"nodeType":"133","messageId":"134","endLine":26,"endColumn":21},{"ruleId":"131","severity":1,"message":"143","line":81,"column":8,"nodeType":"133","messageId":"134","endLine":81,"endColumn":13},{"ruleId":"131","severity":1,"message":"144","line":81,"column":15,"nodeType":"133","messageId":"134","endLine":81,"endColumn":23},{"ruleId":"131","severity":1,"message":"145","line":82,"column":8,"nodeType":"133","messageId":"134","endLine":82,"endColumn":16},{"ruleId":"131","severity":1,"message":"146","line":82,"column":18,"nodeType":"133","messageId":"134","endLine":82,"endColumn":29},{"ruleId":"131","severity":1,"message":"147","line":83,"column":7,"nodeType":"133","messageId":"134","endLine":83,"endColumn":16},{"ruleId":"131","severity":1,"message":"148","line":85,"column":19,"nodeType":"133","messageId":"134","endLine":85,"endColumn":31},{"ruleId":"131","severity":1,"message":"149","line":86,"column":18,"nodeType":"133","messageId":"134","endLine":86,"endColumn":29},{"ruleId":"131","severity":1,"message":"150","line":87,"column":22,"nodeType":"133","messageId":"134","endLine":87,"endColumn":37},{"ruleId":"131","severity":1,"message":"151","line":88,"column":21,"nodeType":"133","messageId":"134","endLine":88,"endColumn":35},{"ruleId":"131","severity":1,"message":"152","line":89,"column":26,"nodeType":"133","messageId":"134","endLine":89,"endColumn":45},{"ruleId":"131","severity":1,"message":"153","line":114,"column":13,"nodeType":"133","messageId":"134","endLine":114,"endColumn":21},{"ruleId":"131","severity":1,"message":"154","line":131,"column":10,"nodeType":"133","messageId":"134","endLine":131,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":670,"column":13,"nodeType":"157","messageId":"158","endLine":751,"endColumn":28},{"ruleId":"131","severity":1,"message":"159","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"160","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":12},{"ruleId":"131","severity":1,"message":"161","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":19},{"ruleId":"131","severity":1,"message":"162","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":17},{"ruleId":"131","severity":1,"message":"163","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":18},{"ruleId":"131","severity":1,"message":"164","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":18},{"ruleId":"131","severity":1,"message":"165","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":24},{"ruleId":"131","severity":1,"message":"166","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":21},{"ruleId":"131","severity":1,"message":"167","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":20},{"ruleId":"131","severity":1,"message":"168","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":10},{"ruleId":"131","severity":1,"message":"169","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":16},{"ruleId":"131","severity":1,"message":"170","line":15,"column":8,"nodeType":"133","messageId":"134","endLine":15,"endColumn":15},{"ruleId":"131","severity":1,"message":"171","line":16,"column":10,"nodeType":"133","messageId":"134","endLine":16,"endColumn":20},{"ruleId":"131","severity":1,"message":"172","line":56,"column":11,"nodeType":"133","messageId":"134","endLine":56,"endColumn":18},{"ruleId":"131","severity":1,"message":"173","line":57,"column":9,"nodeType":"133","messageId":"134","endLine":57,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":75,"column":47,"nodeType":"176","messageId":"177","endLine":75,"endColumn":48,"suggestions":"178"},{"ruleId":"131","severity":1,"message":"179","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"180","line":24,"column":28,"nodeType":"133","messageId":"134","endLine":24,"endColumn":40},{"ruleId":"131","severity":1,"message":"181","line":27,"column":8,"nodeType":"133","messageId":"134","endLine":27,"endColumn":11},{"ruleId":"131","severity":1,"message":"182","line":28,"column":8,"nodeType":"133","messageId":"134","endLine":28,"endColumn":16},{"ruleId":"131","severity":1,"message":"183","line":30,"column":8,"nodeType":"133","messageId":"134","endLine":30,"endColumn":15},{"ruleId":"131","severity":1,"message":"184","line":31,"column":8,"nodeType":"133","messageId":"134","endLine":31,"endColumn":17},{"ruleId":"131","severity":1,"message":"185","line":32,"column":8,"nodeType":"133","messageId":"134","endLine":32,"endColumn":17},{"ruleId":"131","severity":1,"message":"186","line":33,"column":8,"nodeType":"133","messageId":"134","endLine":33,"endColumn":22},{"ruleId":"131","severity":1,"message":"187","line":34,"column":8,"nodeType":"133","messageId":"134","endLine":34,"endColumn":17},{"ruleId":"131","severity":1,"message":"188","line":35,"column":8,"nodeType":"133","messageId":"134","endLine":35,"endColumn":16},{"ruleId":"131","severity":1,"message":"189","line":37,"column":8,"nodeType":"133","messageId":"134","endLine":37,"endColumn":13},{"ruleId":"131","severity":1,"message":"190","line":38,"column":8,"nodeType":"133","messageId":"134","endLine":38,"endColumn":29},{"ruleId":"131","severity":1,"message":"191","line":39,"column":8,"nodeType":"133","messageId":"134","endLine":39,"endColumn":27},{"ruleId":"131","severity":1,"message":"192","line":40,"column":17,"nodeType":"133","messageId":"134","endLine":40,"endColumn":20},{"ruleId":"131","severity":1,"message":"193","line":40,"column":22,"nodeType":"133","messageId":"134","endLine":40,"endColumn":27},{"ruleId":"131","severity":1,"message":"194","line":50,"column":8,"nodeType":"133","messageId":"134","endLine":50,"endColumn":20},{"ruleId":"131","severity":1,"message":"195","line":55,"column":8,"nodeType":"133","messageId":"134","endLine":55,"endColumn":17},{"ruleId":"131","severity":1,"message":"196","line":56,"column":8,"nodeType":"133","messageId":"134","endLine":56,"endColumn":24},{"ruleId":"131","severity":1,"message":"197","line":57,"column":8,"nodeType":"133","messageId":"134","endLine":57,"endColumn":16},{"ruleId":"131","severity":1,"message":"198","line":179,"column":7,"nodeType":"133","messageId":"134","endLine":179,"endColumn":11},{"ruleId":"131","severity":1,"message":"199","line":293,"column":7,"nodeType":"133","messageId":"134","endLine":293,"endColumn":19},{"ruleId":"131","severity":1,"message":"200","line":307,"column":10,"nodeType":"133","messageId":"134","endLine":307,"endColumn":15},{"ruleId":"131","severity":1,"message":"201","line":312,"column":17,"nodeType":"133","messageId":"134","endLine":312,"endColumn":25},{"ruleId":"131","severity":1,"message":"202","line":313,"column":21,"nodeType":"133","messageId":"134","endLine":313,"endColumn":33},{"ruleId":"131","severity":1,"message":"203","line":332,"column":9,"nodeType":"133","messageId":"134","endLine":332,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":369,"column":25,"nodeType":"206","messageId":"207","endLine":369,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":374,"column":13,"nodeType":"210","endLine":374,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":377,"column":13,"nodeType":"210","endLine":377,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":406,"column":30,"nodeType":"206","messageId":"207","endLine":406,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":411,"column":9,"nodeType":"210","endLine":411,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":414,"column":9,"nodeType":"210","endLine":414,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":421,"column":30,"nodeType":"206","messageId":"207","endLine":421,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":426,"column":9,"nodeType":"210","endLine":426,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":429,"column":9,"nodeType":"210","endLine":429,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":441,"column":30,"nodeType":"206","messageId":"207","endLine":441,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":445,"column":9,"nodeType":"210","endLine":445,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":448,"column":9,"nodeType":"210","endLine":448,"endColumn":20},{"ruleId":"208","severity":1,"message":"211","line":465,"column":44,"nodeType":"210","endLine":465,"endColumn":47},{"ruleId":"131","severity":1,"message":"212","line":503,"column":12,"nodeType":"133","messageId":"134","endLine":503,"endColumn":22},{"ruleId":"131","severity":1,"message":"213","line":509,"column":12,"nodeType":"133","messageId":"134","endLine":509,"endColumn":19},{"ruleId":"174","severity":1,"message":"214","line":565,"column":47,"nodeType":"176","messageId":"177","endLine":565,"endColumn":48,"suggestions":"215"},{"ruleId":"174","severity":1,"message":"214","line":600,"column":47,"nodeType":"176","messageId":"177","endLine":600,"endColumn":48,"suggestions":"216"},{"ruleId":"174","severity":1,"message":"214","line":604,"column":47,"nodeType":"176","messageId":"177","endLine":604,"endColumn":48,"suggestions":"217"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":19},{"ruleId":"131","severity":1,"message":"159","line":1,"column":21,"nodeType":"133","messageId":"134","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"218","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"159","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"219","line":4,"column":11,"nodeType":"133","messageId":"134","endLine":4,"endColumn":16},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'Carousel' is defined but never used.","'TextField' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'RangePicker' is assigned a value but never used.","'monthFormat' is assigned a value but never used.","'dateFormatList' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'className' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'setEmailAddress' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setRegisterPassword' is assigned a value but never used.","'response' is assigned a value but never used.","'handleLogin' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'dp' is defined but never used.","'Upload' is defined but never used.","'ImgCrop' is defined but never used.","'AnyARecord' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\D.","Literal","unnecessaryEscape",["222","223"],"'Link' is defined but never used.","'MailOutlined' is defined but never used.","'Box' is defined but never used.","'Collapse' is defined but never used.","'TableRM' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'ListItemIcon' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'rows' is assigned a value but never used.","'useRowStyles' is assigned a value but never used.","'state' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'repos' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'showDrawer' is defined but never used.","'onClose' is defined but never used.","Unnecessary escape character: \\P.",["224","225"],["226","227"],["228","229"],"'React' is defined but never used.","'Props' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"230","fix":"231","desc":"232"},{"messageId":"233","fix":"234","desc":"235"},{"messageId":"230","fix":"236","desc":"232"},{"messageId":"233","fix":"237","desc":"235"},{"messageId":"230","fix":"238","desc":"232"},{"messageId":"233","fix":"239","desc":"235"},{"messageId":"230","fix":"240","desc":"232"},{"messageId":"233","fix":"241","desc":"235"},"removeEscape",{"range":"242","text":"243"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"244","text":"245"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"246","text":"243"},{"range":"247","text":"245"},{"range":"248","text":"243"},{"range":"249","text":"245"},{"range":"250","text":"243"},{"range":"251","text":"245"},[2255,2256],"",[2255,2255],"\\",[16221,16222],[16221,16221],[17327,17328],[17327,17327],[17499,17500],[17499,17499]]